<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freevmessnode.github.io/news/article-23357.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>Spark Streaming 实战 日志分析数据清洗+统计访问量</title>
        <meta name="description" content="1 项目需求 1）需求  统计今天到目前为止的访问量 统计今天到目前为止从搜索引擎过来的课程的访问量  2）开发环境与技术选型  IDEA+maven flume+kafka+HBase  3）安装配" />
        <link rel="icon" href="__ADDON__/img/freevmessnode/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="site.webmanifest">
    <!-- CSS here -->
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/slicknav.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/animate.min.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/fontawesome-all.min.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/themify-icons.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/slick.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/nice-select.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/style.css">
    
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-4H6D9QQ70R"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-4H6D9QQ70R');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Preloader Start -->
    <div id="preloader-active">
        <div class="preloader d-flex align-items-center justify-content-center">
            <div class="preloader-inner position-relative">
                <div class="preloader-circle"></div>
                <div class="preloader-img pere-text">
                    <a href="/">
                        Free Vmess Node
                    </a>
                </div>
            </div>
        </div>
    </div>
    <!-- Preloader Start -->
    <header>
        <!-- Header Start -->
        <div class="header-area header-transparent">
            <div class="main-header">
                <div class="header-bottom  header-sticky">
                    <div class="container-fluid">
                        <div class="row align-items-center">
                            <!-- Logo -->
                            <div class="col-md-3">
                                <div class="logo">
                                                                        <span><a href="/">Free Vmess Node</a></span>
                                                                    </div>
                            </div>
                            <div class="col-xl-8 col-lg-8 col-md-8">
                                <!-- Main-menu -->
                                <div class="main-menu f-right d-none d-lg-block">
                                    <nav>
                                        <ul id="navigation">
                                                                                        <li><a href="/">首页</a></li>
                                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                                        <li><a href="#">关于</a></li>
                                            <li><a href="#">联系</a></li>
                                        </ul>
                                    </nav>
                                </div>
                            </div>

                            <!-- Mobile Menu -->
                            <div class="col-12">
                                <div class="mobile_menu d-block d-lg-none"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Header End -->
    </header>
    <main>
        <!-- Hero Start-->
        <div class="slider-area slider-bg ">
            <div class="single-slider d-flex align-items-center slider-height2 ">
                <div class="container">
                    <div class="row">
                        <div class="col-xl-12">
                            <div class="hero-cap text-center pt-50">
                                <h1>Spark Streaming 实战 日志分析数据清洗+统计访问量</h1>
                                <p>
                                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Slider Shape -->
            <div class="slider-shape d-none d-lg-block">
                <img class="slider-shape1" src="assets/img/hero/top-left-shape.png" alt="">
                <img class="slider-shape2" src="assets/img/hero/right-top-shape.png" alt="">
                <img class="slider-shape3" src="assets/img/hero/left-botom-shape.png" alt="">
            </div>
        </div>
        <!--Hero End -->
        <!-- Testimonial Start -->
        <div class="testimonial-area testimonial-padding mt-5">
            <div class="container ">
                <div class="row">
                    <div class="col-md-9">
                                          				  				  				<div id="content_views" class="markdown_views prism-tomorrow-night-eighties"> <h3 id="1-项目需求">1 项目需求</h3> <p>1）需求</p> <ul> <li>统计今天到目前为止的访问量</li> <li>统计今天到目前为止从搜索引擎过来的课程的访问量</li> </ul> <p>2）开发环境与技术选型</p> <ul> <li>IDEA+maven</li> <li>flume+kafka+HBase</li> </ul> <p>3）安装配置 HBase</p> <ol> <li>下载、解压、配置环境变量</li> <li>配置文件</li> </ol> <p><strong>conf/hbase-env.sh</strong></p> <pre class="prettyprint"><code class="hljs bash">修改JAVA_HOME<span class="hljs-keyword">export</span> HBASE_MANAGES_ZK=<span class="hljs-literal">false</span></code></pre> <p><strong>conf/hbase-site.xml</strong></p> <pre class="prettyprint"><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-title">configuration</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hbase.rootdir<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>hdfs://localhost:8020/hbase<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hbase.cluster.distributed<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hbase.zookeeper.quorum<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>localhost:2181<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">configuration</span>&gt;</span></code></pre> <p><strong>conf/regionservers</strong></p> <pre class="prettyprint"><code class="hljs">localhost</code></pre> <p>4）HBase 建表</p> <pre class="prettyprint"><code class="hljs livecodeserver">//<span class="hljs-number">1</span> 启动hbase start-hbase.sh<span class="hljs-comment"> // 2 启动shell</span> hbase<span class="hljs-built_in">shell</span><span class="hljs-comment"> // 3 建表</span><span class="hljs-built_in">create</span><span class="hljs-string">'course_clickcount'</span>,<span class="hljs-string">'info'</span><span class="hljs-built_in">create</span><span class="hljs-string">'course_search_clickcount'</span>,<span class="hljs-string">'info'</span><span class="hljs-comment"> // 4 查看数据表</span> list<span class="hljs-comment"> // 5 查看数据表信息</span> describe<span class="hljs-string">'course_clickcount'</span><span class="hljs-comment"> // 6 查看表数据</span> scan<span class="hljs-string">'course_clickcount'</span></code></pre> <p>5）<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/lihaogm/SparkStreamTrain"  rel="nofollow"><strong>代码地址</strong></a></p> <h3 id="2-模拟日志生成">2 模拟日志生成</h3> <p>1）使用python开发日志生成器模拟产生日志，每分钟产生一次日志信息</p> <p><strong>generate_log.py</strong></p> <pre class="prettyprint"><code class="hljs python"><span class="hljs-comment">#coding=UTF-8</span><span class="hljs-keyword">import</span> random<span class="hljs-keyword">import</span> time  url_paths=[<span class="hljs-string">"class/112.html"</span>,<span class="hljs-string">"class/128.html"</span>,<span class="hljs-string">"class/145.html"</span>,<span class="hljs-string">"class/130.html"</span>,<span class="hljs-string">"class/146.html"</span>,<span class="hljs-string">"class/131.html"</span>,<span class="hljs-string">"learn/821"</span>,<span class="hljs-string">"course/list"</span> ]  ip_slices=[<span class="hljs-number">132</span>,<span class="hljs-number">156</span>,<span class="hljs-number">124</span>,<span class="hljs-number">10</span>,<span class="hljs-number">29</span>,<span class="hljs-number">167</span>,<span class="hljs-number">143</span>,<span class="hljs-number">187</span>,<span class="hljs-number">30</span>,<span class="hljs-number">46</span>,<span class="hljs-number">55</span>,<span class="hljs-number">63</span>,<span class="hljs-number">72</span>,<span class="hljs-number">87</span>,<span class="hljs-number">98</span>,<span class="hljs-number">168</span>]  http_referers=[<span class="hljs-string">"https://www.baidu.com/s?wd={query}"</span>,<span class="hljs-string">"https://www.sogou.com/web?query={query}"</span>,<span class="hljs-string">"https://cn.bing.com/search?q={query}"</span>,<span class="hljs-string">"https://www.so.com/s?q={query}"</span> ]  search_keyword=[<span class="hljs-string">"spark sql实战"</span>,<span class="hljs-string">"hadoop 基础"</span>,<span class="hljs-string">"storm实战"</span>,<span class="hljs-string">"spark streaming实战"</span> ]  status_code=[<span class="hljs-string">"200"</span>,<span class="hljs-string">"404"</span>,<span class="hljs-string">"500"</span>]<span class="hljs-function"><span class="hljs-keyword">def</span><span class="hljs-title">sample_status_code</span><span class="hljs-params">()</span>:</span><span class="hljs-keyword">return</span> random.sample(status_code,<span class="hljs-number">1</span>)[<span class="hljs-number">0</span>]<span class="hljs-function"><span class="hljs-keyword">def</span><span class="hljs-title">sample_referer</span><span class="hljs-params">()</span>:</span><span class="hljs-keyword">if</span> random.uniform(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)&gt;<span class="hljs-number">0.2</span>:<span class="hljs-keyword">return</span><span class="hljs-string">"-"</span>     refer_str=random.sample(http_referers,<span class="hljs-number">1</span>)     query_str=random.sample(search_keyword,<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> refer_str[<span class="hljs-number">0</span>].format(query=query_str[<span class="hljs-number">0</span>])<span class="hljs-function"><span class="hljs-keyword">def</span><span class="hljs-title">sample_url</span><span class="hljs-params">()</span>:</span><span class="hljs-keyword">return</span> random.sample(url_paths,<span class="hljs-number">1</span>)[<span class="hljs-number">0</span>]<span class="hljs-function"><span class="hljs-keyword">def</span><span class="hljs-title">sample_ip</span><span class="hljs-params">()</span>:</span>     slice=random.sample(ip_slices,<span class="hljs-number">4</span>)<span class="hljs-keyword">return</span><span class="hljs-string">"."</span>.join([str(item)<span class="hljs-keyword">for</span> item<span class="hljs-keyword">in</span> slice])<span class="hljs-function"><span class="hljs-keyword">def</span><span class="hljs-title">generate_log</span><span class="hljs-params">(count=<span class="hljs-number">10</span>)</span>:</span>     time_str=time.strftime(<span class="hljs-string">"%Y-%m-%d %H:%M:%S"</span>,time.localtime())      f=open(<span class="hljs-string">"/Users/Mac/testdata/streaming_access.log"</span>,<span class="hljs-string">"w+"</span>)<span class="hljs-keyword">while</span> count &gt;=<span class="hljs-number">1</span>:         query_log=<span class="hljs-string">"{ip}\t{local_time}\t\"GET /{url} HTTP/1.1\"\t{status_code}\t{refer}"</span>.format(url=sample_url(),ip=sample_ip(),refer=sample_referer(),status_code=sample_status_code(),local_time=time_str)         print(query_log)         f.write(query_log+<span class="hljs-string">"\n"</span>)         count=count-<span class="hljs-number">1</span><span class="hljs-keyword">if</span> __name__ ==<span class="hljs-string">'__main__'</span>:<span class="hljs-comment"># 每一分钟生成一次日志信息</span><span class="hljs-keyword">while</span><span class="hljs-keyword">True</span>:         generate_log()         time.sleep(<span class="hljs-number">60</span>)</code></pre> <h3 id="3-flume收集日志并对接kafka">3 flume收集日志并对接kafka</h3> <p>1）编写flume配置文件，streaming_project2.conf</p> <pre class="prettyprint"><code class="hljs lasso">exec<span class="hljs-attribute">-memory</span><span class="hljs-attribute">-kafka</span><span class="hljs-built_in">.</span>sources<span class="hljs-subst">=</span> exec<span class="hljs-attribute">-source</span> exec<span class="hljs-attribute">-memory</span><span class="hljs-attribute">-kafka</span><span class="hljs-built_in">.</span>sinks<span class="hljs-subst">=</span>kafka<span class="hljs-attribute">-sink</span> exec<span class="hljs-attribute">-memory</span><span class="hljs-attribute">-kafka</span><span class="hljs-built_in">.</span>channels<span class="hljs-subst">=</span> memory<span class="hljs-attribute">-channel</span>  exec<span class="hljs-attribute">-memory</span><span class="hljs-attribute">-kafka</span><span class="hljs-built_in">.</span>sources<span class="hljs-built_in">.</span>exec<span class="hljs-attribute">-source</span><span class="hljs-built_in">.</span><span class="hljs-keyword">type</span><span class="hljs-subst">=</span>exec exec<span class="hljs-attribute">-memory</span><span class="hljs-attribute">-kafka</span><span class="hljs-built_in">.</span>sources<span class="hljs-built_in">.</span>exec<span class="hljs-attribute">-source</span><span class="hljs-built_in">.</span>command<span class="hljs-subst">=</span>tail<span class="hljs-attribute">-F</span> /Users/Mac/testdata/streaming_access<span class="hljs-built_in">.</span><span class="hljs-keyword">log</span> exec<span class="hljs-attribute">-memory</span><span class="hljs-attribute">-kafka</span><span class="hljs-built_in">.</span>sources<span class="hljs-built_in">.</span>exec<span class="hljs-attribute">-source</span><span class="hljs-built_in">.</span>shell<span class="hljs-subst">=</span> /bin/sh<span class="hljs-attribute">-c</span>  exec<span class="hljs-attribute">-memory</span><span class="hljs-attribute">-kafka</span><span class="hljs-built_in">.</span>memory<span class="hljs-attribute">-channel</span><span class="hljs-built_in">.</span><span class="hljs-keyword">type</span><span class="hljs-subst">=</span>memory  exec<span class="hljs-attribute">-memory</span><span class="hljs-attribute">-kafka</span><span class="hljs-built_in">.</span>sinks<span class="hljs-built_in">.</span>kafka<span class="hljs-attribute">-sink</span><span class="hljs-built_in">.</span><span class="hljs-keyword">type</span><span class="hljs-subst">=</span> org<span class="hljs-built_in">.</span>apache<span class="hljs-built_in">.</span>flume<span class="hljs-built_in">.</span>sink<span class="hljs-built_in">.</span>kafka<span class="hljs-built_in">.</span>KafkaSink exec<span class="hljs-attribute">-memory</span><span class="hljs-attribute">-kafka</span><span class="hljs-built_in">.</span>sinks<span class="hljs-built_in">.</span>kafka<span class="hljs-attribute">-sink</span><span class="hljs-built_in">.</span>brokerList<span class="hljs-subst">=</span>localhost:<span class="hljs-number">9092</span> exec<span class="hljs-attribute">-memory</span><span class="hljs-attribute">-kafka</span><span class="hljs-built_in">.</span>sinks<span class="hljs-built_in">.</span>kafka<span class="hljs-attribute">-sink</span><span class="hljs-built_in">.</span>topic<span class="hljs-subst">=</span>test_topic exec<span class="hljs-attribute">-memory</span><span class="hljs-attribute">-kafka</span><span class="hljs-built_in">.</span>sinks<span class="hljs-built_in">.</span>kafka<span class="hljs-attribute">-sink</span><span class="hljs-built_in">.</span>batchSize<span class="hljs-subst">=</span><span class="hljs-number">5</span> exec<span class="hljs-attribute">-memory</span><span class="hljs-attribute">-kafka</span><span class="hljs-built_in">.</span>sinks<span class="hljs-built_in">.</span>kafka<span class="hljs-attribute">-sink</span><span class="hljs-built_in">.</span>requireedAcks<span class="hljs-subst">=</span><span class="hljs-number">1</span>  exec<span class="hljs-attribute">-memory</span><span class="hljs-attribute">-kafka</span><span class="hljs-built_in">.</span>sources<span class="hljs-built_in">.</span>exec<span class="hljs-attribute">-source</span><span class="hljs-built_in">.</span>channels<span class="hljs-subst">=</span>memory<span class="hljs-attribute">-channel</span> exec<span class="hljs-attribute">-memory</span><span class="hljs-attribute">-kafka</span><span class="hljs-built_in">.</span>sinks<span class="hljs-built_in">.</span>kafka<span class="hljs-attribute">-sink</span><span class="hljs-built_in">.</span>channel<span class="hljs-subst">=</span> memory<span class="hljs-attribute">-channel</span></code></pre> <h3 id="4-业务开发">4 业务开发</h3> <h5 id="41-消费kafka数据数据清洗与统计">4.1 消费kafka数据、数据清洗与统计</h5> <p>1）实体类</p> <p><strong>ClickLog.scala</strong></p> <pre class="prettyprint"><code class="hljs scala"><span class="hljs-keyword">package</span> com.lihaogn.sparkProject.domain<span class="hljs-javadoc">/**   * 清洗后的日志格式   *   *<span class="hljs-javadoctag">@param</span> ip   *<span class="hljs-javadoctag">@param</span> time   *<span class="hljs-javadoctag">@param</span> courseId   *<span class="hljs-javadoctag">@param</span> statusCode 日志访问状态码   *<span class="hljs-javadoctag">@param</span> referer   */</span><span class="hljs-class"><span class="hljs-keyword">case</span><span class="hljs-keyword">class</span><span class="hljs-title">ClickLog</span><span class="hljs-params">(ip: String, time: String, courseId: Int, statusCode: Int, referer: String)</span></span></code></pre> <p><strong>CourseClickCount.scala</strong></p> <pre class="prettyprint"><code class="hljs scala"><span class="hljs-keyword">package</span> com.lihaogn.sparkProject.domain<span class="hljs-javadoc">/**   * 课程点击次数实体类   *   *<span class="hljs-javadoctag">@param</span> day_course  对应HBase中的rowkey   *<span class="hljs-javadoctag">@param</span> click_count 访问次数   */</span><span class="hljs-class"><span class="hljs-keyword">case</span><span class="hljs-keyword">class</span><span class="hljs-title">CourseClickCount</span><span class="hljs-params">(day_course: String, click_count: Long)</span></span></code></pre> <p><strong>CourseSearchClickCount.scala</strong></p> <pre class="prettyprint"><code class="hljs scala"><span class="hljs-keyword">package</span> com.lihaogn.sparkProject.domain<span class="hljs-javadoc">/**   * 从搜索引擎过来的课程点击数实体类   *<span class="hljs-javadoctag">@param</span> day_search_course   *<span class="hljs-javadoctag">@param</span> click_count   */</span><span class="hljs-class"><span class="hljs-keyword">case</span><span class="hljs-keyword">class</span><span class="hljs-title">CourseSearchClickCount</span><span class="hljs-params">(day_search_course: String, click_count: Long)</span></span></code></pre> <p>2）工具类</p> <p><strong>DateUtils.scala</strong></p> <pre class="prettyprint"><code class="hljs scala"><span class="hljs-keyword">package</span> com.lihaogn.sparkProject.utils<span class="hljs-keyword">import</span> java.util.Date<span class="hljs-keyword">import</span> org.apache.commons.lang3.time.FastDateFormat<span class="hljs-javadoc">/**   * 日期时间工具类   */</span><span class="hljs-class"><span class="hljs-keyword">object</span><span class="hljs-title">DateUtils</span> {<!-- --></span><span class="hljs-keyword">val</span> OLD_FORMAT = FastDateFormat.getInstance(<span class="hljs-string">"yyyy-MM-dd HH:mm:ss"</span>)<span class="hljs-keyword">val</span> TARGET_FORMAT = FastDateFormat.getInstance(<span class="hljs-string">"yyyyMMddHHmmss"</span>)<span class="hljs-keyword">def</span> getTime(time: String) = {     OLD_FORMAT.parse(time).getTime   }<span class="hljs-keyword">def</span> parseToMinute(time: String) = {     TARGET_FORMAT.format(<span class="hljs-keyword">new</span> Date(getTime(time)))   }<span class="hljs-keyword">def</span> main(args: Array[String]): Unit = {     println(parseToMinute(<span class="hljs-string">"2018-9-6 13:58:01"</span>))   } }</code></pre> <p>添加依赖</p> <pre class="prettyprint"><code class="hljs xml"><span class="hljs-comment">&lt;!-- cloudera repo--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">repositories</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">repository</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">id</span>&gt;</span>cloudera<span class="hljs-tag">&lt;/<span class="hljs-title">id</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">url</span>&gt;</span>https://repository.cloudera.com/artifactory/cloudera-repos<span class="hljs-tag">&lt;/<span class="hljs-title">url</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">repository</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">repositories</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">groupId</span>&gt;</span>org.apache.hbase<span class="hljs-tag">&lt;/<span class="hljs-title">groupId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">artifactId</span>&gt;</span>hbase-client<span class="hljs-tag">&lt;/<span class="hljs-title">artifactId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">version</span>&gt;</span>${hbase.version}<span class="hljs-tag">&lt;/<span class="hljs-title">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">groupId</span>&gt;</span>org.apache.hbase<span class="hljs-tag">&lt;/<span class="hljs-title">groupId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">artifactId</span>&gt;</span>hbase-server<span class="hljs-tag">&lt;/<span class="hljs-title">artifactId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">version</span>&gt;</span>${hbase.version}<span class="hljs-tag">&lt;/<span class="hljs-title">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">dependency</span>&gt;</span><span class="hljs-comment">&lt;!-- hadoop --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">groupId</span>&gt;</span>org.apache.hadoop<span class="hljs-tag">&lt;/<span class="hljs-title">groupId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">artifactId</span>&gt;</span>hadoop-client<span class="hljs-tag">&lt;/<span class="hljs-title">artifactId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">version</span>&gt;</span>${hadoop.version}<span class="hljs-tag">&lt;/<span class="hljs-title">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">dependency</span>&gt;</span></code></pre> <p><strong>HBaseUtils.java</strong></p> <pre class="prettyprint"><code class="hljs java"><span class="hljs-keyword">package</span> com.lihaogn.spark.project.utils;<span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<span class="hljs-keyword">import</span> org.apache.hadoop.hbase.client.HBaseAdmin;<span class="hljs-keyword">import</span> org.apache.hadoop.hbase.client.HTable;<span class="hljs-keyword">import</span> org.apache.hadoop.hbase.client.Put;<span class="hljs-keyword">import</span> org.apache.hadoop.hbase.util.Bytes;<span class="hljs-keyword">import</span> java.io.IOException;<span class="hljs-javadoc">/**  * HBase操作工具类，Java工具类建议采用单例模式封装  */</span><span class="hljs-keyword">public</span><span class="hljs-class"><span class="hljs-keyword">class</span><span class="hljs-title">HBaseUtils</span> {<!-- --></span>      HBaseAdmin admin =<span class="hljs-keyword">null</span>;     Configuration configuration =<span class="hljs-keyword">null</span>;<span class="hljs-javadoc">/**      * 私有构造方法      */</span><span class="hljs-keyword">private</span><span class="hljs-title">HBaseUtils</span>() {          configuration =<span class="hljs-keyword">new</span> Configuration();         configuration.set(<span class="hljs-string">"hbase.zookeeper.quorum"</span>,<span class="hljs-string">"localhost:2181"</span>);         configuration.set(<span class="hljs-string">"hbase.rootdir"</span>,<span class="hljs-string">"hdfs://localhost:8020/hbase"</span>);<span class="hljs-keyword">try</span> {             admin =<span class="hljs-keyword">new</span> HBaseAdmin(configuration);         }<span class="hljs-keyword">catch</span> (IOException e) {             e.printStackTrace();         }     }<span class="hljs-keyword">private</span><span class="hljs-keyword">static</span> HBaseUtils instance =<span class="hljs-keyword">null</span>;<span class="hljs-keyword">public</span><span class="hljs-keyword">static</span><span class="hljs-keyword">synchronized</span> HBaseUtils<span class="hljs-title">getInstance</span>() {<span class="hljs-keyword">if</span> (<span class="hljs-keyword">null</span> == instance) {             instance =<span class="hljs-keyword">new</span> HBaseUtils();         }<span class="hljs-keyword">return</span> instance;     }<span class="hljs-javadoc">/**      * 根据表名获取到HTable实例      *      *<span class="hljs-javadoctag"> @param</span> tableName      *<span class="hljs-javadoctag"> @return</span>      */</span><span class="hljs-keyword">public</span> HTable<span class="hljs-title">getTable</span>(String tableName) {         HTable table =<span class="hljs-keyword">null</span>;<span class="hljs-keyword">try</span> {             table =<span class="hljs-keyword">new</span> HTable(configuration, tableName);         }<span class="hljs-keyword">catch</span> (IOException e) {             e.printStackTrace();         }<span class="hljs-keyword">return</span> table;     }<span class="hljs-javadoc">/**      * 添加一条记录到表中      *      *<span class="hljs-javadoctag"> @param</span> tableName      *<span class="hljs-javadoctag"> @param</span> rowkey      *<span class="hljs-javadoctag"> @param</span> cf      *<span class="hljs-javadoctag"> @param</span> column      *<span class="hljs-javadoctag"> @param</span> value      */</span><span class="hljs-keyword">public</span><span class="hljs-keyword">void</span><span class="hljs-title">put</span>(String tableName, String rowkey, String cf, String column, String value) {         HTable table = getTable(tableName);          Put put =<span class="hljs-keyword">new</span> Put(Bytes.toBytes(rowkey));         put.add(Bytes.toBytes(cf), Bytes.toBytes(column), Bytes.toBytes(value));<span class="hljs-keyword">try</span> {             table.put(put);         }<span class="hljs-keyword">catch</span> (IOException e) {             e.printStackTrace();         }     }<span class="hljs-keyword">public</span><span class="hljs-keyword">static</span><span class="hljs-keyword">void</span><span class="hljs-title">main</span>(String[] args) {<span class="hljs-comment">//        HTable table = HBaseUtils.getInstance().getTable("course_clickcount");</span><span class="hljs-comment">//        System.out.println(table.getName().getNameAsString());</span>          String tableName =<span class="hljs-string">"course_clickcount"</span>;         String rowkey =<span class="hljs-string">"20180906_1"</span>;         String cf =<span class="hljs-string">"info"</span>;         String column =<span class="hljs-string">"click_count"</span>;         String value =<span class="hljs-string">"2"</span>;          HBaseUtils.getInstance().put(tableName, rowkey, cf, column, value);     } }</code></pre> <p>3）数据库操作</p> <p>CourseClickCountDAO.scala</p> <pre class="prettyprint"><code class="hljs scala"><span class="hljs-keyword">package</span> com.lihaogn.sparkProject.dao<span class="hljs-keyword">import</span> com.lihaogn.spark.project.utils.HBaseUtils<span class="hljs-keyword">import</span> com.lihaogn.sparkProject.domain.CourseClickCount<span class="hljs-keyword">import</span> org.apache.hadoop.hbase.client.Get<span class="hljs-keyword">import</span> org.apache.hadoop.hbase.util.Bytes<span class="hljs-keyword">import</span> scala.collection.mutable.ListBuffer<span class="hljs-javadoc">/**   * 数据访问层，课程点击数   */</span><span class="hljs-class"><span class="hljs-keyword">object</span><span class="hljs-title">CourseClickCountDAO</span> {<!-- --></span><span class="hljs-keyword">val</span> tableName =<span class="hljs-string">"course_clickcount"</span><span class="hljs-keyword">val</span> cf =<span class="hljs-string">"info"</span><span class="hljs-keyword">val</span> qualifer =<span class="hljs-string">"click_count"</span><span class="hljs-javadoc">/**     * 保存数据到HBase     *     *<span class="hljs-javadoctag">@param</span> list     */</span><span class="hljs-keyword">def</span> save(list: ListBuffer[CourseClickCount]): Unit = {<span class="hljs-keyword">val</span> table = HBaseUtils.getInstance().getTable(tableName)<span class="hljs-keyword">for</span> (ele &lt;- list) {       table.incrementColumnValue(Bytes.toBytes(ele.day_course),         Bytes.toBytes(cf),         Bytes.toBytes(qualifer),         ele.click_count)     }   }<span class="hljs-javadoc">/**     * 根据rowkey查询值     *<span class="hljs-javadoctag">@param</span> day_course     *<span class="hljs-javadoctag">@return</span>     */</span><span class="hljs-keyword">def</span> count(day_course:String):Long= {<span class="hljs-keyword">val</span> table = HBaseUtils.getInstance().getTable(tableName)<span class="hljs-keyword">val</span> get =<span class="hljs-keyword">new</span> Get(Bytes.toBytes(day_course))<span class="hljs-keyword">val</span> value = table.get(get).getValue(cf.getBytes, qualifer.getBytes)<span class="hljs-keyword">if</span> (value ==<span class="hljs-keyword">null</span>) {<span class="hljs-number">0</span>L     }<span class="hljs-keyword">else</span>       Bytes.toLong(value)   }<span class="hljs-keyword">def</span> main(args: Array[String]): Unit = {<span class="hljs-keyword">val</span> list=<span class="hljs-keyword">new</span> ListBuffer[CourseClickCount]     list.append(CourseClickCount(<span class="hljs-string">"20180906_8"</span>,<span class="hljs-number">8</span>))     list.append(CourseClickCount(<span class="hljs-string">"20180906_4"</span>,<span class="hljs-number">3</span>))     list.append(CourseClickCount(<span class="hljs-string">"20180906_2"</span>,<span class="hljs-number">2</span>))      save(list)      println(count(<span class="hljs-string">"20180906_8"</span>)+<span class="hljs-string">":"</span>+count(<span class="hljs-string">"20180906_4"</span>)+<span class="hljs-string">":"</span>+count(<span class="hljs-string">"20180906_2"</span>))   }  }</code></pre> <p>CourseSearchClickCountDAO.scala</p> <pre class="prettyprint"><code class="hljs scala"><span class="hljs-keyword">package</span> com.lihaogn.sparkProject.dao<span class="hljs-keyword">import</span> com.lihaogn.spark.project.utils.HBaseUtils<span class="hljs-keyword">import</span> com.lihaogn.sparkProject.domain.{CourseClickCount, CourseSearchClickCount}<span class="hljs-keyword">import</span> org.apache.hadoop.hbase.client.Get<span class="hljs-keyword">import</span> org.apache.hadoop.hbase.util.Bytes<span class="hljs-keyword">import</span> scala.collection.mutable.ListBuffer<span class="hljs-javadoc">/**   * 数据访问层，从搜索引擎过来的课程点击数   */</span><span class="hljs-class"><span class="hljs-keyword">object</span><span class="hljs-title">CourseSearchClickCountDAO</span> {<!-- --></span><span class="hljs-keyword">val</span> tableName =<span class="hljs-string">"course_search_clickcount"</span><span class="hljs-keyword">val</span> cf =<span class="hljs-string">"info"</span><span class="hljs-keyword">val</span> qualifer =<span class="hljs-string">"click_count"</span><span class="hljs-javadoc">/**     * 保存数据到HBase     *     *<span class="hljs-javadoctag">@param</span> list     */</span><span class="hljs-keyword">def</span> save(list: ListBuffer[CourseSearchClickCount]): Unit = {<span class="hljs-keyword">val</span> table = HBaseUtils.getInstance().getTable(tableName)<span class="hljs-keyword">for</span> (ele &lt;- list) {       table.incrementColumnValue(Bytes.toBytes(ele.day_search_course),         Bytes.toBytes(cf),         Bytes.toBytes(qualifer),         ele.click_count)     }   }<span class="hljs-javadoc">/**     * 根据rowkey查询值     *     *<span class="hljs-javadoctag">@param</span> day_search_course     *<span class="hljs-javadoctag">@return</span>     */</span><span class="hljs-keyword">def</span> count(day_search_course: String): Long = {<span class="hljs-keyword">val</span> table = HBaseUtils.getInstance().getTable(tableName)<span class="hljs-keyword">val</span> get =<span class="hljs-keyword">new</span> Get(Bytes.toBytes(day_search_course))<span class="hljs-keyword">val</span> value = table.get(get).getValue(cf.getBytes, qualifer.getBytes)<span class="hljs-keyword">if</span> (value ==<span class="hljs-keyword">null</span>) {<span class="hljs-number">0</span>L     }<span class="hljs-keyword">else</span>       Bytes.toLong(value)   }<span class="hljs-keyword">def</span> main(args: Array[String]): Unit = {<span class="hljs-keyword">val</span> list =<span class="hljs-keyword">new</span> ListBuffer[CourseSearchClickCount]     list.append(CourseSearchClickCount(<span class="hljs-string">"20180906_www.baidu.com_8"</span>,<span class="hljs-number">8</span>))     list.append(CourseSearchClickCount(<span class="hljs-string">"20180906_www.baidu.com_4"</span>,<span class="hljs-number">3</span>))      save(list)      println(count(<span class="hljs-string">"20180906_www.baidu.com_8"</span>) +<span class="hljs-string">":"</span> + count(<span class="hljs-string">"20180906_www.baidu.com_4"</span>))   }  }</code></pre> <p>4）主类</p> <p>SparkStreamingApp.scala</p> <pre class="prettyprint"><code class="hljs avrasm">package<span class="hljs-keyword">com</span><span class="hljs-preprocessor">.lihaogn</span><span class="hljs-preprocessor">.sparkProject</span><span class="hljs-preprocessor">.main</span>  import<span class="hljs-keyword">com</span><span class="hljs-preprocessor">.lihaogn</span><span class="hljs-preprocessor">.sparkProject</span><span class="hljs-preprocessor">.dao</span>.{CourseClickCountDAO, CourseSearchClickCountDAO} import<span class="hljs-keyword">com</span><span class="hljs-preprocessor">.lihaogn</span><span class="hljs-preprocessor">.sparkProject</span><span class="hljs-preprocessor">.domain</span>.{ClickLog, CourseClickCount, CourseSearchClickCount} import<span class="hljs-keyword">com</span><span class="hljs-preprocessor">.lihaogn</span><span class="hljs-preprocessor">.sparkProject</span><span class="hljs-preprocessor">.utils</span><span class="hljs-preprocessor">.DateUtils</span> import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.spark</span><span class="hljs-preprocessor">.SparkConf</span> import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.spark</span><span class="hljs-preprocessor">.streaming</span>.{Seconds, StreamingContext} import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.spark</span><span class="hljs-preprocessor">.streaming</span><span class="hljs-preprocessor">.kafka</span><span class="hljs-preprocessor">.KafkaUtils</span>  import scala<span class="hljs-preprocessor">.collection</span><span class="hljs-preprocessor">.mutable</span><span class="hljs-preprocessor">.ListBuffer</span><span class="hljs-comment">/**   * 使用spark streaming分析日志   */</span> object SparkStreamingApp {    def main(args: Array[String]): Unit = {      if (args<span class="hljs-preprocessor">.length</span> !=<span class="hljs-number">4</span>) {       System<span class="hljs-preprocessor">.err</span><span class="hljs-preprocessor">.println</span>(<span class="hljs-string">"usage: KafKaReceiverWC &lt;zkQuorum&gt; &lt;group&gt; &lt;topics&gt; &lt;numThreads&gt;"</span>)     }      val Array(zkQuorum, group, topics, numThreads) = args      val sparkConf = new SparkConf()<span class="hljs-preprocessor">.setAppName</span>(<span class="hljs-string">"SparkStreamingApp"</span>)<span class="hljs-preprocessor">.setMaster</span>(<span class="hljs-string">"local[5]"</span>)      val ssc = new StreamingContext(sparkConf, Seconds(<span class="hljs-number">5</span>))      val topicMap = topics<span class="hljs-preprocessor">.split</span>(<span class="hljs-string">","</span>)<span class="hljs-preprocessor">.map</span>((_, numThreads<span class="hljs-preprocessor">.toInt</span>))<span class="hljs-preprocessor">.toMap</span>      // spark streaming 对接 kafka     val messages = KafkaUtils<span class="hljs-preprocessor">.createStream</span>(ssc, zkQuorum, group, topicMap)      // 步骤一：测试数据接收     messages<span class="hljs-preprocessor">.map</span>(_._2)<span class="hljs-preprocessor">.count</span>()<span class="hljs-preprocessor">.print</span>()      // 步骤二：数据清洗     val logs = messages<span class="hljs-preprocessor">.map</span>(_._2)     val cleanData = logs<span class="hljs-preprocessor">.map</span>(line =&gt; {       val infos = line<span class="hljs-preprocessor">.split</span>(<span class="hljs-string">"\t"</span>)        val url = infos(<span class="hljs-number">2</span>)<span class="hljs-preprocessor">.split</span>(<span class="hljs-string">" "</span>)(<span class="hljs-number">1</span>)       var courseId =<span class="hljs-number">0</span>        // 获取课程标号       if (url<span class="hljs-preprocessor">.startsWith</span>(<span class="hljs-string">"/class"</span>)) {         val courseHtml = url<span class="hljs-preprocessor">.split</span>(<span class="hljs-string">"/"</span>)(<span class="hljs-number">2</span>)         courseId = courseHtml<span class="hljs-preprocessor">.substring</span>(<span class="hljs-number">0</span>, courseHtml<span class="hljs-preprocessor">.lastIndexOf</span>(<span class="hljs-string">"."</span>))<span class="hljs-preprocessor">.toInt</span>       }        ClickLog(infos(<span class="hljs-number">0</span>), DateUtils<span class="hljs-preprocessor">.parseToMinute</span>(infos(<span class="hljs-number">1</span>)), courseId, infos(<span class="hljs-number">3</span>)<span class="hljs-preprocessor">.toInt</span>, infos(<span class="hljs-number">4</span>))     })<span class="hljs-preprocessor">.filter</span>(clicklog =&gt; clicklog<span class="hljs-preprocessor">.courseId</span> !=<span class="hljs-number">0</span>)      cleanData<span class="hljs-preprocessor">.print</span>()      // 步骤三：统计今天到现在为止的课程访问量     cleanData<span class="hljs-preprocessor">.map</span>(<span class="hljs-built_in">x</span>=&gt;{       (<span class="hljs-built_in">x</span><span class="hljs-preprocessor">.time</span><span class="hljs-preprocessor">.substring</span>(<span class="hljs-number">0</span>,<span class="hljs-number">8</span>)+<span class="hljs-string">"_"</span>+<span class="hljs-built_in">x</span><span class="hljs-preprocessor">.courseId</span>,<span class="hljs-number">1</span>)     })<span class="hljs-preprocessor">.reduceByKey</span>(_+_)<span class="hljs-preprocessor">.foreachRDD</span>(rdd=&gt;{       rdd<span class="hljs-preprocessor">.foreachPartition</span>(partitionRecords=&gt;{         val list=new ListBuffer[CourseClickCount]          partitionRecords<span class="hljs-preprocessor">.foreach</span>(pair=&gt;{           list<span class="hljs-preprocessor">.append</span>(CourseClickCount(pair._1,pair._2))         })         // 写入数据库         CourseClickCountDAO<span class="hljs-preprocessor">.save</span>(list)        })     })      // 步骤四：统计从搜索引擎过来的从今天开始到现在的课程的访问量     cleanData<span class="hljs-preprocessor">.map</span>(<span class="hljs-built_in">x</span>=&gt;{       val referer=<span class="hljs-built_in">x</span><span class="hljs-preprocessor">.referer</span><span class="hljs-preprocessor">.replaceAll</span>(<span class="hljs-string">"//"</span>,<span class="hljs-string">"/"</span>)       val splits=referer<span class="hljs-preprocessor">.split</span>(<span class="hljs-string">"/"</span>)       var host=<span class="hljs-string">""</span>       if(splits<span class="hljs-preprocessor">.length</span>&gt;<span class="hljs-number">2</span>) {         host=splits(<span class="hljs-number">1</span>)       }        (host,<span class="hljs-built_in">x</span><span class="hljs-preprocessor">.courseId</span>,<span class="hljs-built_in">x</span><span class="hljs-preprocessor">.time</span>)     })<span class="hljs-preprocessor">.filter</span>(_._1!=<span class="hljs-string">""</span>)<span class="hljs-preprocessor">.map</span>(<span class="hljs-built_in">x</span>=&gt;{       (<span class="hljs-built_in">x</span>._3<span class="hljs-preprocessor">.substring</span>(<span class="hljs-number">0</span>,<span class="hljs-number">8</span>)+<span class="hljs-string">"_"</span>+<span class="hljs-built_in">x</span>._1+<span class="hljs-string">"_"</span>+<span class="hljs-built_in">x</span>._2,<span class="hljs-number">1</span>)     })<span class="hljs-preprocessor">.reduceByKey</span>(_+_)<span class="hljs-preprocessor">.foreachRDD</span>(rdd=&gt;{       rdd<span class="hljs-preprocessor">.foreachPartition</span>(partitionRecords=&gt;{         val list =new ListBuffer[CourseSearchClickCount]          partitionRecords<span class="hljs-preprocessor">.foreach</span>(pair=&gt;{           list<span class="hljs-preprocessor">.append</span>(CourseSearchClickCount(pair._1,pair._2))         })         // 写入数据库         CourseSearchClickCountDAO<span class="hljs-preprocessor">.save</span>(list)        })     })      ssc<span class="hljs-preprocessor">.start</span>()      ssc<span class="hljs-preprocessor">.awaitTermination</span>()   } }</code></pre> <h3 id="5-运行测试">5 运行测试</h3> <p>1）启动 zookeeper</p> <pre class="prettyprint"><code class="hljs sql">zkServer.sh<span class="hljs-operator"><span class="hljs-keyword">start</span></span></code></pre> <p>2）启动 HDFS</p> <pre class="prettyprint"><code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">start</span>-dfs.sh<span class="hljs-keyword">start</span>-yarn.sh</span></code></pre> <p>3）启动 kafka</p> <pre class="prettyprint"><code class="hljs lasso">kafka<span class="hljs-attribute">-server</span><span class="hljs-attribute">-start</span><span class="hljs-built_in">.</span>sh<span class="hljs-attribute">-daemon</span><span class="hljs-variable">$KAFKA_HOME</span>/config/server<span class="hljs-built_in">.</span>properties $</code></pre> <p>4）启动 flume</p> <pre class="prettyprint"><code class="hljs haml">flume-ng agent \ -<span class="ruby">-conf<span class="hljs-variable">$FLUME_HOME</span>/conf \</span>-<span class="ruby">-conf-file<span class="hljs-variable">$FLUME_HOME</span>/conf/streaming_project2.conf \</span>-<span class="ruby">-name exec-memory-kafka \</span>-<span class="ruby"><span class="hljs-constant">Dflume</span>.root.logger=<span class="hljs-constant">INFO</span>,console</span></code></pre> <p>5）运行日志生成器</p> <pre class="prettyprint"><code class="hljs avrasm">python3 generate_log<span class="hljs-preprocessor">.py</span></code></pre> <p>6）运行spark程序</p> <pre class="prettyprint"><code class="hljs haml">spark-submit \ -<span class="ruby">-<span class="hljs-class"><span class="hljs-keyword">class</span><span class="hljs-title">com</span>.<span class="hljs-title">lihaogn</span>.<span class="hljs-title">sparkProject</span>.<span class="hljs-title">main</span>.<span class="hljs-title">SparkStreamingApp</span> \</span></span>-<span class="ruby">-master local[<span class="hljs-number">5</span>] \</span>-<span class="ruby">-name<span class="hljs-constant">SparkStreamingApp</span> \</span>-<span class="ruby">-jars /<span class="hljs-constant">Users</span>/<span class="hljs-constant">Mac</span>/software/spark-streaming-kafka-<span class="hljs-number">0</span>-<span class="hljs-number">8</span>-assembly_2.<span class="hljs-number">11</span>-<span class="hljs-number">2.2</span>.<span class="hljs-number">0</span>.jar,<span class="hljs-variable">$(</span>echo /<span class="hljs-constant">Users</span>/<span class="hljs-constant">Mac</span>/app/hbase-<span class="hljs-number">1.2</span>.<span class="hljs-number">0</span>-cdh5.<span class="hljs-number">7.0</span>/lib/*.jar | tr<span class="hljs-string">' '</span><span class="hljs-string">','</span>) \</span><span class="hljs-comment">/Users/Mac/my-lib/Kafka-train-1.0.jar \</span> localhost:2181 test test_topic 1</code></pre> <p>7）结果<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220608/d4b82012e5eaff0fbe270c746f93a124.jpg" alt="Spark Streaming 实战 日志分析数据清洗+统计访问量"></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-22887.htm">同城免费领养宠物诈骗电话 同城免费领养宠物诈骗电话号码</a></p>
                                        <p>下一个：<a href="/news/article-23359.htm">SpringSecurity核心过滤器-CsrfFilter</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-9-17-vmess-node-github.htm" title="9月17日 | Vmess节点订阅每天更新21.6M/S免费节点订阅链接">9月17日 | Vmess节点订阅每天更新21.6M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-26-node-share-links.htm" title="11月26日 | Vmess节点订阅每天更新22.4M/S免费节点订阅链接">11月26日 | Vmess节点订阅每天更新22.4M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-4-vmess-windows.htm" title="9月4日 | Vmess节点订阅每天更新22M/S免费节点订阅链接">9月4日 | Vmess节点订阅每天更新22M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-18-node-share.htm" title="8月18日 | Vmess节点订阅每天更新21.1M/S免费节点订阅链接">8月18日 | Vmess节点订阅每天更新21.1M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-19-free-subscribe-node.htm" title="8月19日 | Vmess节点订阅每天更新22.4M/S免费节点订阅链接">8月19日 | Vmess节点订阅每天更新22.4M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-12-free-node-subscribe-links.htm" title="11月12日 | Vmess节点订阅每天更新21.7M/S免费节点订阅链接">11月12日 | Vmess节点订阅每天更新21.7M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-21-vmess-node-share.htm" title="11月21日 | Vmess节点订阅每天更新22.2M/S免费节点订阅链接">11月21日 | Vmess节点订阅每天更新22.2M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-22886.htm" title="动物医院需要几个执业兽医证才能开 动物医院需要几个执业兽医证才能开诊所">动物医院需要几个执业兽医证才能开 动物医院需要几个执业兽医证才能开诊所</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-8-vmess-node-share.htm" title="11月8日 | Vmess节点订阅每天更新21.6M/S免费节点订阅链接">11月8日 | Vmess节点订阅每天更新21.6M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-13-today-vmess-node.htm" title="9月13日 | Vmess节点订阅每天更新22.9M/S免费节点订阅链接">9月13日 | Vmess节点订阅每天更新22.9M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
        <!-- Testimonial End -->
    </main>
        <footer>
        <!-- Footer Start-->
        <div class="footer-area">
            <div class="container">
                <div class="footer-bottom">
                    <div class="row d-flex justify-content-between align-items-center">
                        <div class="col-xl-9 col-lg-9 ">
                            <div class="footer-copy-right">
                                <p>
                                    FreeVmessNode免费订阅官网 版权所有 Powered by WordPress
                                </p>
                            </div>
                        </div>
                        <div class="col-xl-3 col-lg-3">
                            <!-- Footer Social -->
                            <div class="footer-social f-right">
                                <a href="#"><i class="fab fa-facebook-f"></i></a>
                                <a href="#"><i class="fab fa-twitter"></i></a>
                                <a href="#"><i class="fas fa-globe"></i></a>
                                <a href="#"><i class="fab fa-instagram"></i></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Footer End-->
    </footer>
    <!-- Scroll Up -->
    <div id="back-top">
        <a title="Go to Top" href="#"> <i class="fas fa-level-up-alt"></i></a>
    </div>
    <!-- JS here -->
    <!-- All JS Custom Plugins Link Here here -->
    <script src="/assets/website/js/frontend/freevmessnode/vendor/modernizr-3.5.0.min.js"></script>
    <!-- Jquery, Popper, Bootstrap -->
    <script src="/assets/website/js/frontend/freevmessnode/vendor/jquery-1.12.4.min.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/popper.min.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/bootstrap.min.js"></script>
    <!-- Jquery Mobile Menu -->
    <script src="/assets/website/js/frontend/freevmessnode/jquery.slicknav.min.js"></script>
    <!-- Jquery Slick , Owl-Carousel Plugins -->
    <script src="/assets/website/js/frontend/freevmessnode/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/slick.min.js"></script>
    <!-- One Page, Animated-HeadLin -->
    <script src="/assets/website/js/frontend/freevmessnode/wow.min.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/animated.headline.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/jquery.magnific-popup.js"></script>
    <!-- Nice-select, sticky -->
    <script src="/assets/website/js/frontend/freevmessnode/jquery.nice-select.min.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/jquery.sticky.js"></script>
    <!-- contact js -->
    <script src="/assets/website/js/frontend/freevmessnode/contact.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/jquery.form.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/jquery.validate.min.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/mail-script.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/jquery.ajaxchimp.min.js"></script>
    <!-- Jquery Plugins, main Jquery -->
    <script src="/assets/website/js/frontend/freevmessnode/plugins.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>