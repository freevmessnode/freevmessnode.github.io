<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freevmessnode.github.io/news/article-78298.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>浅尝Spring注解开发_简单理解BeanFactoryPostProcessor、BeanDefinitionRegistryPostProcessor、ApplicationListener_在线工具</title>
        <meta name="description" content="浅尝Spring注解开发，基于Spring 4.3.12分析BeanFactoryPostProcessor、BeanDefinitionRegistryPostProcessor、Applicati" />
        <link rel="icon" href="/assets/website/img/freevmessnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="FreeVmessNode免费订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freevmessnode.github.io/news/article-78298.htm" />
    <meta property="og:site_name" content="FreeVmessNode免费订阅官网" />
    <meta property="og:title" content="浅尝Spring注解开发_简单理解BeanFactoryPostProcessor、BeanDefinitionRegistryPostProcessor、ApplicationListener_在线工具" />
    <meta property="og:image" content="https://freevmessnode.github.io/uploads/20240805/7f79e58efa971b68eef2952e7149345d.webp" />
        <meta property="og:release_date" content="2025-03-21T10:30:09" />
    <meta property="og:updated_time" content="2025-03-21T10:30:09" />
        <meta property="og:description" content="浅尝Spring注解开发，基于Spring 4.3.12分析BeanFactoryPostProcessor、BeanDefinitionRegistryPostProcessor、Applicati" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="site.webmanifest">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="浅尝Spring注解开发_简单理解BeanFactoryPostProcessor、BeanDefinitionRegistryPostProcessor、ApplicationListener_在线工具">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- CSS here -->
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/slicknav.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/animate.min.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/fontawesome-all.min.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/themify-icons.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/slick.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/nice-select.css">
    <link rel="stylesheet" href="/assets/website/css/freevmessnode/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-4H6D9QQ70R"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-4H6D9QQ70R');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Preloader Start -->
    <div id="preloader-active">
        <div class="preloader d-flex align-items-center justify-content-center">
            <div class="preloader-inner position-relative">
                <div class="preloader-circle"></div>
                <div class="preloader-img pere-text">
                    <a href="/">
                        Free Vmess Node                    </a>
                </div>
            </div>
        </div>
    </div>
    <!-- Preloader Start -->
    <header>
        <!-- Header Start -->
        <div class="header-area header-transparent">
            <div class="main-header">
                <div class="header-bottom  header-sticky">
                    <div class="container-fluid">
                        <div class="row align-items-center">
                            <!-- Logo -->
                            <div class="col-md-3">
                                <div class="logo">
                                    <a href="/">
                                                                        <span>Free Vmess Node</span>
                                                                        </a>
                                </div>
                            </div>
                            <div class="col-xl-8 col-lg-8 col-md-8">
                                <!-- Main-menu -->
                                <div class="main-menu f-right d-none d-lg-block">
                                    <nav>
                                        <ul id="navigation">
                                                                                        <li><a href="/">首页</a></li>
                                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                        <li><a href="/client.htm">客户端</a></li>
                                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                                    </ul>
                                    </nav>
                                </div>
                            </div>

                            <!-- Mobile Menu -->
                            <div class="col-12">
                                <div class="mobile_menu d-block d-lg-none"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Header End -->
    </header>
    <main>
        <!-- Hero Start-->
        <div class="slider-area slider-bg ">
            <div class="single-slider d-flex align-items-center slider-height2 ">
                <div class="container">
                    <div class="row">
                        <div class="col-xl-12">
                            <div class="hero-cap text-center pt-50">
                                <h1>浅尝Spring注解开发_简单理解BeanFactoryPostProcessor、BeanDefinitionRegistryPostProcessor、ApplicationListener_在线工具</h1>
                                <p>
                                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Slider Shape -->
            <div class="slider-shape d-none d-lg-block">
                <img class="slider-shape1" src="assets/img/hero/top-left-shape.png" alt="">
                <img class="slider-shape2" src="assets/img/hero/right-top-shape.png" alt="">
                <img class="slider-shape3" src="assets/img/hero/left-botom-shape.png" alt="">
            </div>
        </div>
        <!--Hero End -->
        <!-- Testimonial Start -->
        <div class="testimonial-area testimonial-padding mt-5">
            <div class="container ">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				</h1> <blockquote> <p>浅尝Spring注解开发，基于Spring 4.3.12<br /><font color="red">分析BeanFactoryPostProcessor、BeanDefinitionRegistryPostProcessor、ApplicationListener</font></p> </blockquote> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/wei-ran/p/16203112.html"  title="浅尝Spring注解开发_自定义注册组件、属性赋值、自动装配" target="_blank"  rel="nofollow">浅尝Spring注解开发_自定义注册组件、属性赋值、自动装配</a><br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/wei-ran/p/16207148.html"  title="浅尝Spring注解开发_Bean生命周期及执行过程" target="_blank"  rel="nofollow">浅尝Spring注解开发_Bean生命周期及执行过程</a><br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/wei-ran/p/16213120.html"  title="浅尝Spring注解开发_AOP原理及完整过程分析（源码）" target="_blank"  rel="nofollow">浅尝Spring注解开发_AOP原理及完整过程分析（源码）</a><br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/wei-ran/p/16221178.html"  title="浅尝Spring注解开发_声明式事务及原理" target="_blank"  rel="nofollow">浅尝Spring注解开发_声明式事务及原理</a><br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/wei-ran/p/16221760.html"  title="浅尝Spring注解开发_简单理解BeanFactoryPostProcessor、BeanDefinitionRegistryPostProcessor、ApplicationListener" target="_blank"  rel="nofollow">浅尝Spring注解开发_简单理解BeanFactoryPostProcessor、BeanDefinitionRegistryPostProcessor、ApplicationListener</a><br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/wei-ran/p/16222835.html"  title="Spring注解开发_Spring容器创建概述" target="_blank"  rel="nofollow">Spring注解开发_Spring容器创建概述</a></p> <h2 id="beanfactorypostprocessor">BeanFactoryPostProcessor</h2> <ul> <li> <code>BeanPostProcessor</code>：bean后置处理器，bean创建对象初始化前后进行拦截工作的</li> <li> <code>BeanFactoryPostProcessor</code>：beanFactory的后置处理器</p> <ul> <li><font color="red">在<code>BeanFactory</code>标准初始化之后调用，来定制和修改<code>BeanFactory</code>的内容</font></li> <li>所有的bean定义已经保存加载到<code>beanFactory</code>，但是bean的实例还未创建</li> </ul> </li> </ul> <h3 id="原理">原理</h3> <ol> <li>ioc容器创建对象</li> <li> <code>refresh()-&gt;invokeBeanFactoryPostProcessors(beanFactory)</code></p> <ul> <li>如何找到所有的<code>BeanFactoryPostProcessor</code>并执行他们的方法？ <ol> <li>直接在<code>BeanFactory</code>中找到所有类型是<code>BeanFactoryPostProcessor</code>的组件，</li> <li>按照<code>Ordered</code>接口排序</li> <li>依次执行它们的方法。在初始化创建其他组件前面执行</li> </ol> </li> </ul> </li> </ol> <pre><code class="language-java">@Component public class MyBeanFactoryPostProcessor implements BeanFactoryPostProcessor {  	@Override 	public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException { 		System.out.println("MyBeanFactoryPostProcessor...postProcessBeanFactory..."); 		int count = beanFactory.getBeanDefinitionCount(); 		String[] names = beanFactory.getBeanDefinitionNames(); 		System.out.println("当前BeanFactory中有"+count+" 个Bean"); 		System.out.println(Arrays.asList(names)); 	} } </code></pre> <p>输出</p> <pre><code class="language-java">MyBeanFactoryPostProcessor...postProcessBeanFactory... 当前BeanFactory中有9 个Bean //[输出所有BeanDefinitionNames...] //创建注入容器中的一个Bean blue...constructor </code></pre> <h2 id="beandefinitionregistrypostprocessor">BeanDefinitionRegistryPostProcessor</h2> <ul> <li> <code>BeanDefinitionRegistryPostProcessor</code></p> <ul> <li>继承自<code>BeanFactoryPostProcessor</code>：<code>BeanDefinitionRegistryPostProcessor extends BeanFactoryPostProcessor</code> </li> <li> <code>postProcessBeanDefinitionRegistry()</code>在所有bean定义信息将要被加载，bean实例还未创建</li> </ul> </li> <li><font color="red">优先于<code>BeanFactoryPostProcessor</code>执行</font></li> <li><font color="red">利用<code>BeanDefinitionRegistryPostProcessor</code>给容器中再额外添加一些组件</font></li> </ul> <h3 id="原理-1">原理</h3> <ol> <li>ioc创建对象</li> <li><code>refresh()-&gt;invokeBeanFactoryPostProcessors(beanFactory)</code></li> <li>从容器中获取到所有的<code>BeanDefinitionRegistryPostProcessor</code>组件 <ol> <li>同样实现了<code>Ordered</code>接口排序，<font color="red">依次触发所有的<code>postProcessBeanDefinitionRegistry()</code>方法</font> </li> <li><font color="red">再来触发<code>BeanFactoryPostProcessor</code>方法<code>postProcessBeanFactory()</code></font></li> </ol> </li> </ol> <pre><code class="language-java">@Component public class MyBeanDefinitionRegistryPostProcessor implements BeanDefinitionRegistryPostProcessor{  	@Override 	public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException { 		// TODO Auto-generated method stub 		System.out.println("MyBeanDefinitionRegistryPostProcessor...bean的数量："+beanFactory.getBeanDefinitionCount()); 	}  	//BeanDefinitionRegistry Bean定义信息的保存中心，以后BeanFactory就是按照BeanDefinitionRegistry里面保存的每一个bean定义信息创建bean实例； 	@Override 	public void postProcessBeanDefinitionRegistry(BeanDefinitionRegistry registry) throws BeansException { 		// TODO Auto-generated method stub 		System.out.println("postProcessBeanDefinitionRegistry...bean的数量："+registry.getBeanDefinitionCount());                  //再注册一个Bean，两种不同方法 		//RootBeanDefinition beanDefinition = new RootBeanDefinition(Blue.class); 		AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder.rootBeanDefinition(Blue.class).getBeanDefinition(); 		registry.registerBeanDefinition("hello", beanDefinition); 	} } </code></pre> <p>输出</p> <pre><code class="language-java">//下面两个都是MyBeanDefinitionRegistryPostProcessor方法，由于在方法内又手动注册了一个，所以是11个 postProcessBeanDefinitionRegistry...bean的数量：10 MyBeanDefinitionRegistryPostProcessor...bean的数：11 //下面一个是BeanFactoryPostProcessor方法 MyBeanFactoryPostProcessor...postProcessBeanFactory... 当前BeanFactory中有11 个Bean //输出所有BeanDefinitionNames... [org.springframework...] //两个Bean blue...constructor blue...constructor </code></pre> <h2 id="applicationlistener">ApplicationListener</h2> <ul> <li> <p><code>ApplicationListener</code>：监听容器中发布的事件。事件驱动模型开发</p> </li> <li> <p><code>public interface ApplicationListener&lt;E extends ApplicationEvent&gt;</code>：监听 <code>ApplicationEvent</code> 及其下面的子事件</p> </li> </ul> <h3 id="步骤">步骤</h3> <ol> <li>写一个监听器（<code>ApplicationListener</code>实现类）来监听某个事件（<code>ApplicationEvent</code>及其子类），或者使用<code>@EventListener</code>注解标注在监听方法上</li> <li>把监听器加入到容器</li> <li>只要容器中有相关事件的发布，我们就能监听到这个事件 <ul> <li> <code>ContextRefreshedEvent</code>：容器刷新完成（所有bean都完全创建）会发布这个事件</li> <li> <code>ContextClosedEvent</code>：关闭容器会发布这个事件</li> </ul> </li> <li>发布一个事件 <ul> <li><code>applicationContext.publishEvent()</code></li> </ul> </li> </ol> <p>自定义监听器</p> <pre><code class="language-java">@Component public class MyApplicationListener implements ApplicationListener&lt;ApplicationEvent&gt; {  	//当容器中发布此事件以后，方法触发 	@Override 	public void onApplicationEvent(ApplicationEvent event) { 		// TODO Auto-generated method stub 		System.out.println("收到事件："+event); 	} } </code></pre> <pre><code class="language-java">@Service public class UserService { 	 	@EventListener(classes={ApplicationEvent.class}) 	public void listen(ApplicationEvent event){ 		System.out.println("UserService..监听到的事件："+event); 	}  } </code></pre> <p>发布事件</p> <pre><code class="language-java">public class IOCTest_Ext { 	 	@Test 	public void test01(){ 		AnnotationConfigApplicationContext applicationContext  = new AnnotationConfigApplicationContext(ExtConfig.class); 		 		//发布事件； 		applicationContext.publishEvent(new ApplicationEvent(new String("我发布的事件")) { 		}); 		 		applicationContext.close(); 	}  } </code></pre> <p>输出</p> <pre><code class="language-java">//注入Bean blue...constructor //监听容器刷新事件 UserService..监听到的事件：org.springframework.context.event.ContextRefreshedEvent[] 收到事件：org.springframework.context.event.ContextRefreshedEvent[] UserService..监听到的事件：com.atguigu.test.IOCTest_Ext$1[source=我发布的事件] //监听自定义事件 UserService..监听到的事件：org.springframework.context.event.ContextClosedEvent[] 收到事件：com.atguigu.test.IOCTest_Ext$1[source=我发布的事件] //监听容器关闭事件 UserService..监听到的事件：org.springframework.context.event.ContextClosedEvent 收到事件：org.springframework.context.event.ContextClosedEvent[] </code></pre> <h3 id="原理-2">原理</h3> <ol> <li> <p>发布<code>ContextRefreshedEvent</code>事件为例：</p> <ol> <li> <p>容器创建对象：<code>refresh()</code></p> </li> <li> <p><code>finishRefresh()</code>，容器刷新完成</p> <p>事件发布流程：</p> <ol> <li> <p><font color="red">获取事件的多播器（派发器）</font>：<code>getApplicationEventMulticaster()</code></p> </li> <li> <p><code>multicastEvent</code>派发事件</p> </li> <li> <p>获取到所有的<code>ApplicationListener</code></p> <p><code>for (final ApplicationListener&lt;?&gt; listener : getApplicationListeners(event, type))</code></p> <ol> <li>如果有<code>Executor</code>，可以支持使用<code>Executor</code>进行异步派发：<code>Executor executor = getTaskExecutor()</code> </li> <li>否则，同步的方式直接执行<code>listener</code>方法：<code>invokeListener(listener, event)</code> </li> <li>拿到<code>listener</code>回调<code>onApplicationEvent</code>方法</li> </ol> </li> </ol> </li> </ol> </li> <li> <p>发布自定义事件</p> </li> <li> <p>容器关闭发布<code>ContextClosedEvent</code>事件</p> </li> </ol> <p><strong>事件多播器（派发器）</strong></p> <ol> <li>容器创建对象：<code>refresh()</code> </li> <li> <code>initApplicationEventMulticaster()</code>：初始化<code>ApplicationEventMulticaster</code></p> <ol> <li>先去容器中找有没有<code>id="applicationEventMulticaster"</code>的组件</li> <li>如果没有就创建一个：<code>this.applicationEventMulticaster = new SimpleApplicationEventMulticaster(beanFactory)</code>，并且加入到容器中，我们就可以在其他组件要派发事件，自动注入这个<code>applicationEventMulticaster</code> </li> </ol> </li> </ol> <p><strong>容器中有哪些监听器</strong></p> <ol> <li>容器创建对象：<code>refresh()</code> </li> <li> <code>registerListeners()</code></p> <ol> <li>从容器中拿到所有的监听器，把他们注册到<code>applicationEventMulticaster</code>中<code>String[] listenerBeanNames = getBeanNamesForType(ApplicationListener.class, true, false)</code> </li> <li>将<code>listener</code>注册到<code>ApplicationEventMulticaster</code>中<code>getApplicationEventMulticaster().addApplicationListenerBean(listenerBeanName)</code> </li> </ol> </li> </ol> <p><strong>SmartInitializingSingleton原理</strong></p> <p><code>@EventListener</code>使用<code>EventListenerMethodProcessor</code>处理器来解析方法上的<code>@EventListener</code>，<code>EventListenerMethodProcessor</code>实现了<code>SmartInitializingSingleton</code></p> <ol> <li> <p>ioc容器创建对象并<code>refresh()</code></p> </li> <li> <p><code>finishBeanFactoryInitialization(beanFactory)</code>：初始化剩下的单实例bean</p> <ol> <li> <p>先创建所有的单实例bean，<code>getBean()</code></p> </li> <li> <p>获取所有创建好的单实例bean，判断是否是<code>SmartInitializingSingleton</code>类型的</p> <p>如果是就调用<code>afterSingletonsInstantiated()</code></p> </li> </ol> </li> </ol> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-78297.htm">5种SpringMvc的异步处理方式你都了解吗？</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-40486.htm" title="当我们更改小于当前序列号的AUTO_INCREMENT值时，MySQL将返回什么？">当我们更改小于当前序列号的AUTO_INCREMENT值时，MySQL将返回什么？</a></li>
                        <li class="py-2"><a href="/news/article-43462.htm" title="宠物领养合同怎么写 宠物领养合同怎么写范本">宠物领养合同怎么写 宠物领养合同怎么写范本</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-13-vmess-github.htm" title="1月13日 | Vmess节点订阅每天更新22.2M/S免费节点订阅链接">1月13日 | Vmess节点订阅每天更新22.2M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-44455.htm" title="北京宠爱宠物医院在哪里（北京宠爱动物医院消费高吗）">北京宠爱宠物医院在哪里（北京宠爱动物医院消费高吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-12-latest-vmess-node.htm" title="3月12日 | Vmess节点订阅每天更新21.4M/S免费节点订阅链接">3月12日 | Vmess节点订阅每天更新21.4M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-49410.htm" title="toString()和new String()区别">toString()和new String()区别</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-10-free-node-subscribe.htm" title="3月10日 | Vmess节点订阅每天更新21.1M/S免费节点订阅链接">3月10日 | Vmess节点订阅每天更新21.1M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-62118.htm" title="动物疫苗的作用有哪些呢视频 动物疫苗的作用有哪些呢视频讲解">动物疫苗的作用有哪些呢视频 动物疫苗的作用有哪些呢视频讲解</a></li>
                        <li class="py-2"><a href="/news/article-37031.htm" title="动物疫苗注射注意事项及禁忌有哪些 动物疫苗注射注意事项及禁忌有哪些呢">动物疫苗注射注意事项及禁忌有哪些 动物疫苗注射注意事项及禁忌有哪些呢</a></li>
                        <li class="py-2"><a href="/news/article-36540.htm" title="动物医院需要什么设备（动物医院需要几个兽医资格证）">动物医院需要什么设备（动物医院需要几个兽医资格证）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">63</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
        <!-- Testimonial End -->
    </main>
        <footer>
        <!-- Footer Start-->
        <div class="footer-area">
            <div class="container">
                <div class="footer-bottom">
                    <div class="row d-flex justify-content-between align-items-center">
                        <div class="col-xl-9 col-lg-9 ">
                            <div class="footer-copy-right">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                                <p>
                                    FreeVmessNode免费订阅官网 版权所有 Powered by WordPress
                                </p>
                            </div>
                        </div>
                        <div class="col-xl-3 col-lg-3">
                            <!-- Footer Social -->
                            <div class="footer-social f-right">
                                <a href="#"><i class="fab fa-facebook-f"></i></a>
                                <a href="#"><i class="fab fa-twitter"></i></a>
                                <a href="#"><i class="fas fa-globe"></i></a>
                                <a href="#"><i class="fab fa-instagram"></i></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Footer End-->
    </footer>
    <!-- Scroll Up -->
    <div id="back-top">
        <a title="Go to Top" href="#"> <i class="fas fa-level-up-alt"></i></a>
    </div>
    <!-- JS here -->
    <!-- All JS Custom Plugins Link Here here -->
    <script src="/assets/website/js/frontend/freevmessnode/vendor/modernizr-3.5.0.min.js"></script>
    <!-- Jquery, Popper, Bootstrap -->
    <script src="/assets/website/js/frontend/freevmessnode/vendor/jquery-1.12.4.min.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/popper.min.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/bootstrap.min.js"></script>
    <!-- Jquery Mobile Menu -->
    <script src="/assets/website/js/frontend/freevmessnode/jquery.slicknav.min.js"></script>
    <!-- Jquery Slick , Owl-Carousel Plugins -->
    <script src="/assets/website/js/frontend/freevmessnode/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/slick.min.js"></script>
    <!-- One Page, Animated-HeadLin -->
    <script src="/assets/website/js/frontend/freevmessnode/wow.min.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/animated.headline.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/jquery.magnific-popup.js"></script>
    <!-- Nice-select, sticky -->
    <script src="/assets/website/js/frontend/freevmessnode/jquery.nice-select.min.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/jquery.sticky.js"></script>
    <!-- contact js -->
    <script src="/assets/website/js/frontend/freevmessnode/contact.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/jquery.form.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/jquery.validate.min.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/mail-script.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/jquery.ajaxchimp.min.js"></script>
    <!-- Jquery Plugins, main Jquery -->
    <script src="/assets/website/js/frontend/freevmessnode/plugins.js"></script>
    <script src="/assets/website/js/frontend/freevmessnode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>